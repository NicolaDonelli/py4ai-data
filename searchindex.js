Search.setIndex({"docnames": ["api/modules", "api/py4ai", "api/py4ai.data", "api/py4ai.data.datasets", "api/py4ai.data.layer", "api/py4ai.data.layer.common", "api/py4ai.data.layer.fs", "api/py4ai.data.layer.mongo", "api/py4ai.data.layer.pandas", "api/py4ai.data.layer.sqlalchemy", "api/py4ai.data.model", "index", "intro/readme", "userguide/index"], "filenames": ["api/modules.rst", "api/py4ai.rst", "api/py4ai.data.rst", "api/py4ai.data.datasets.rst", "api/py4ai.data.layer.rst", "api/py4ai.data.layer.common.rst", "api/py4ai.data.layer.fs.rst", "api/py4ai.data.layer.mongo.rst", "api/py4ai.data.layer.pandas.rst", "api/py4ai.data.layer.sqlalchemy.rst", "api/py4ai.data.model.rst", "index.rst", "intro/readme.rst", "userguide/index.rst"], "titles": ["py4ai", "py4ai namespace", "py4ai.data package", "py4ai.data.datasets package", "py4ai.data.layer package", "py4ai.data.layer.common package", "py4ai.data.layer.fs package", "py4ai.data.layer.mongo package", "py4ai.data.layer.pandas package", "py4ai.data.layer.sqlalchemy package", "py4ai.data.model package", "Welcome to py4ai-data documentation!", "py4ai data", "Installation"], "terms": {"namespac": [0, 11], "subpackag": [0, 11], "data": [0, 1, 13], "packag": [0, 1, 11, 12], "submodul": [0, 1, 4, 11, 12], "except": [0, 1, 11], "modul": [0, 1, 11, 12], "content": [0, 1, 11], "dataset": [1, 2, 10, 11, 12], "layer": [1, 2, 11], "model": [1, 2, 6, 7, 8, 11], "core": [1, 2, 5, 6, 8, 11, 12, 13], "ml": [1, 2, 11, 12], "text": [1, 2, 4, 6, 8, 11], "notableexcept": [1, 2, 11], "get_unbalanced_dataset": [2, 3, 11], "get_weather_nyc_dataset": [2, 3, 11], "common": [2, 4, 6, 7, 8, 9, 10, 11, 12], "criteria": [2, 4, 11, 12], "repositori": [2, 4, 11, 12], "serialiaz": [2, 4, 11, 12], "f": [2, 4, 10, 11], "serial": [2, 4, 5, 8, 10, 11, 12], "tabl": [2, 4, 9, 10], "mongo": [2, 4, 11, 12], "panda": [2, 4, 10, 11, 12], "sqlalchemi": [2, 4, 11, 12, 13], "baseiter": [2, 10, 11], "cach": [2, 10, 11], "empti": [2, 4, 6, 7, 8, 9, 10, 11], "item": [2, 4, 5, 6, 7, 8, 9, 10, 11], "type": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13], "baserang": [2, 10, 11], "business_dai": [2, 10, 11], "dai": [2, 10, 11], "end": [2, 10, 11, 12], "minutes_15": [2, 10, 11], "overlap": [2, 10, 11, 12], "rang": [2, 10, 11, 12], "start": [2, 10, 11], "cachediter": [2, 10, 11, 12], "from_iter": [2, 10, 11], "compositerang": [2, 10, 11, 12], "simplifi": [2, 10, 11], "dillseri": [2, 10, 11, 12], "load": [2, 10, 11], "write": [2, 6, 10, 11, 12], "itergener": [2, 10, 11], "iter": [2, 6, 8, 10, 11, 12], "iterableutilsmixin": [2, 10, 11], "batch": [2, 10, 11], "cached_typ": [2, 10, 11], "filter": [2, 6, 10, 11, 12], "foreach": [2, 10, 11], "from_el": [2, 10, 11], "lazy_typ": [2, 10, 11], "map": [2, 10, 11], "take": [2, 10, 11], "to_cach": [2, 10, 11], "to_lazi": [2, 10, 11], "lazyiter": [2, 10, 11, 12], "pickleseri": [2, 4, 6, 10, 11], "registerlazycachediter": [2, 10, 11], "register_cach": [2, 10, 11], "register_lazi": [2, 10, 11], "serializ": [2, 10, 11, 12], "cacheddataset": [2, 10, 11, 12], "to_df": [2, 10, 11], "union": [2, 6, 8, 9, 10, 11, 12], "datasetutilsmixin": [2, 10, 11], "aspandasdataset": [2, 10, 11], "checknam": [2, 10, 11], "getfeaturesa": [2, 10, 11, 12], "getlabelsa": [2, 10, 11], "lazydataset": [2, 10, 11, 12], "featur": [2, 3, 10, 11], "label": [2, 3, 10, 11, 12], "withlookback": [2, 10, 11], "multifeaturesampl": [2, 10, 11, 12], "pandasdataset": [2, 3, 10, 11, 12], "createobject": [2, 10, 11], "dropna": [2, 10, 11], "from_sequ": [2, 10, 11], "index": [2, 4, 5, 6, 10, 11, 12], "intersect": [2, 10, 11], "loc": [2, 10, 11, 12], "takeaspanda": [2, 10, 11], "pandastimeindexeddataset": [2, 3, 10, 11, 12], "sampl": [2, 3, 10, 11, 12], "features_and_labels_to_dataset": [2, 10, 11], "cacheddocu": [2, 10, 11], "document": [2, 5, 6, 7, 8, 10, 12], "addproperti": [2, 10, 11], "author": [2, 10, 11], "getorthrow": [2, 10, 11], "languag": [2, 10, 11], "properti": [2, 5, 6, 7, 8, 9, 10, 11], "removeproperti": [2, 10, 11], "setrandomuuid": [2, 10, 11], "documentsutilsmixin": [2, 10, 11], "lazydocu": [2, 10, 11], "generate_random_uuid": [2, 10, 11], "definit": 2, "base": [2, 5, 6, 7, 8, 9, 10, 12], "messag": 2, "str": [2, 3, 5, 6, 7, 8, 9, 10, 12], "baseexcept": 2, "repres": [2, 5, 6, 7, 8, 10, 12], "non": [2, 10], "exist": [2, 6, 12], "return": [2, 3, 5, 6, 7, 8, 9, 10, 12], "an": [2, 5, 6, 7, 8, 9, 10, 12], "instanc": [2, 6, 7, 8, 9, 10, 12], "paramet": [2, 3, 5, 6, 7, 8, 9, 10], "output": [2, 10], "contain": [3, 4, 5, 6, 10, 12], "us": [3, 5, 6, 7, 8, 9, 10, 12], "test": [3, 10, 11], "features_fil": 3, "home": 3, "runner": 3, "work": [3, 7, 12], "unbalanced_featur": 3, "p": 3, "labels_fil": 3, "unbalanced_label": 3, "unbalanc": 3, "name": [3, 4, 6, 7, 10, 11, 12], "pickl": [3, 6, 8, 10], "file": [3, 6, 8, 10, 12], "where": [3, 6, 10, 11], "ar": [3, 5, 6, 10, 12], "store": [3, 5, 6, 7, 8, 9, 10, 12], "object": [3, 5, 6, 7, 8, 9, 10, 12], "class": [3, 5, 6, 7, 8, 9, 10, 12], "filenam": [3, 6, 8, 10, 12], "weather_nyc_short": 3, "csv": [3, 6, 8, 12], "nyc": 3, "wheather": 3, "basecriteria": [4, 5, 11], "queri": [4, 5, 6, 7, 8, 9, 11], "searchcriteria": [4, 5, 6, 7, 8, 9, 11, 12], "page": [4, 5, 6, 7, 8, 9, 11, 12], "more_pag": [4, 5, 11], "size": [4, 5, 10, 11, 12], "queryopt": [4, 5, 6, 7, 8, 9, 11], "copi": [4, 5, 11], "creat": [4, 5, 6, 7, 8, 9, 10, 11, 12], "delet": [4, 5, 6, 7, 8, 9, 11], "delete_by_criteria": [4, 5, 6, 7, 8, 9, 11], "list": [4, 5, 6, 7, 8, 9, 10, 11, 12], "retriev": [4, 5, 6, 7, 8, 9, 10, 11, 12], "retrieve_by_criteria": [4, 5, 6, 7, 8, 9, 11], "save": [4, 5, 6, 7, 8, 9, 10, 11], "sortingdirect": [4, 5, 6, 11], "asc": [4, 5, 11], "de": [4, 5, 11], "dataseri": [4, 5, 6, 7, 8, 9, 11, 12], "get_kei": [4, 5, 6, 11, 12], "to_ent": [4, 5, 6, 11, 12], "to_object": [4, 5, 6, 11, 12], "to_object_kei": [4, 5, 6, 11, 12], "filesystemcriteriafactori": [4, 6, 11], "all": [4, 5, 6, 7, 8, 9, 10, 11, 12], "filter_path_by_condit": [4, 6, 11], "format_nam": [4, 6, 11], "get_index_field": [4, 6, 11], "sort_bi": [4, 6, 11], "update_index": [4, 6, 11], "filesystemsearchcriteria": [4, 6, 11], "filesystemrepositori": [4, 6, 11], "fileseri": [4, 6, 11], "mode": [4, 6, 11], "with_path": [4, 6, 11], "fileserializermod": [4, 6, 11], "binari": [4, 6, 9, 11], "indexedio": [4, 6, 11], "config": [4, 6, 7, 11], "buffer": [4, 6, 11], "csvserial": [4, 6, 11], "localdatabas": [4, 6, 11], "tabulardata": [4, 6, 11], "updat": [4, 6, 8, 11], "complete_path_split": [4, 6, 11], "create_dir_if_not_exist": [4, 6, 11], "mongosearchcriteria": [4, 7, 11, 12], "mongorepositori": [4, 7, 11, 12], "mongomodel": [4, 7, 11], "create_mongo_id": [4, 7, 11, 12], "mongoconfig": [4, 7, 11], "admin": [4, 7, 11], "auth": [4, 7, 11], "authsourc": [4, 7, 11], "db_name": [4, 7, 11], "getcollect": [4, 7, 11], "host": [4, 7, 11], "port": [4, 7, 11], "pandassearchcriteria": [4, 8, 11], "csvrepositori": [4, 8, 11, 12], "pandasrepositori": [4, 8, 11], "commit": [4, 8, 11, 12], "sqlalchemysearchcriteria": [4, 9, 11], "sqlalchemyrepositori": [4, 9, 11], "sqlalchemyseri": [4, 9, 11], "v1": 4, "abstract": [4, 5, 6, 7, 8, 9, 10, 11], "implement": [4, 5, 6, 7, 8, 9, 10, 12], "persist": [4, 5, 6, 7, 8, 9, 12], "basic": [5, 12], "arg": [5, 10], "kwd": [5, 10], "gener": [5, 6, 7, 9, 10, 12], "q": [5, 8, 12], "withlog": 5, "abc": [5, 6, 8, 9, 10, 12], "underli": [5, 6, 7, 8, 9, 12], "extend": [5, 6, 10], "logic": [5, 12], "oper": [5, 7, 12], "int": [5, 7, 10, 12], "e": [5, 6, 7, 8, 9, 12], "bool": [5, 6, 7, 8, 9, 10], "result": [5, 6, 10], "instanti": [5, 6, 7, 8, 9, 10, 12], "element": [5, 6, 9, 10], "number": [5, 10], "flag": 5, "notifi": 5, "whether": [5, 6, 7, 8, 9, 10, 12], "more": [5, 10, 12], "page_start": 5, "0": [5, 12, 13], "page_s": 5, "1": [5, 12, 13], "sorting_opt": [5, 6], "tupl": [5, 6, 10], "provid": [5, 6, 7, 8, 9, 10, 12], "option": [5, 6, 7, 8, 9, 10, 12], "call": [5, 12], "integ": [5, 12], "set": [5, 6, 10, 12], "current": [5, 6, 7, 10, 12], "default": [5, 8, 10], "valu": [5, 6, 7, 8, 9, 10], "i": [5, 6, 7, 8, 9, 10, 11], "one": [5, 6, 10, 12], "order": [5, 8, 12], "none": [5, 6, 7, 8, 9, 10, 12], "overrid": 5, "new": [5, 6, 7, 10, 12], "overridden": 5, "ke": [5, 6, 7, 8, 9], "kd": [5, 7, 8, 9], "d": [5, 10], "async": [5, 6, 7, 8, 9], "entiti": [5, 6, 7, 8, 9, 12], "same": [5, 6, 7, 9, 10, 12], "input": [5, 6, 7, 9, 10], "after": [5, 6, 7, 9], "creation": [5, 6, 7, 9], "If": [5, 6, 7, 8, 9, 10], "fail": [5, 6, 7, 9], "error": [5, 6, 7, 9], "should": [5, 6, 7, 9, 10, 12], "kei": [5, 6, 7, 8, 9, 10, 12], "entri": [5, 6, 7, 8, 9], "associ": [5, 6, 7, 8, 9, 10, 12], "identifi": [5, 6, 7, 8, 9, 12], "boolean": [5, 6, 7, 8, 9, 10], "indic": [5, 6, 7, 8, 9, 10], "ha": [5, 6, 7, 8, 9, 12], "complet": [5, 6, 7, 8, 9, 12], "successfulli": [5, 6, 7, 8, 9], "match": [5, 6, 7, 8, 9], "given": [5, 6, 7, 8, 9, 10, 12], "full": [5, 6, 7, 8, 9], "when": [5, 6, 7, 8, 9, 10, 12], "correspond": [5, 6, 7, 9], "determin": [5, 6, 7, 9], "found": [5, 6, 7, 9, 10], "select": [5, 6, 7, 9, 10], "sequenc": [5, 6, 7, 8, 9, 10], "have": [5, 6, 7, 9, 10, 12], "been": [5, 6, 7, 9, 10], "intenum": 5, "enum": [5, 6], "direct": 5, "sort": [5, 6, 8], "extract": [5, 6], "deseri": [5, 6, 7, 9, 12], "raw": [5, 6, 8, 9], "domain": [5, 6, 7, 8, 12], "transform": [5, 6], "filesystem": [6, 8], "path": [6, 8], "index_fil": 6, "posixpath": 6, "json": [6, 12], "criteriafactori": 6, "fast": 6, "condit": [6, 8], "callabl": [6, 8, 10], "dict": [6, 7, 9, 10, 12], "function": [6, 10], "appli": 6, "field": [6, 10], "static": [6, 7, 8, 9, 10, 12], "reformat": [6, 10], "system": [6, 12], "strip": 6, "ani": [6, 7, 8, 9, 10, 12], "from": [6, 7, 8, 10, 12, 13], "hash": [6, 7, 12], "dictionari": [6, 10, 12], "pair": 6, "whose": 6, "comput": 6, "pandasfilt": [6, 8], "pattern": [6, 7], "mongodb": [6, 7, 12], "The": [6, 7, 10, 12], "motor": [6, 7, 13], "framework": [6, 7, 10], "locat": 6, "persis": [6, 7, 8, 9], "rais": [6, 9, 10], "valueerror": [6, 9, 10], "multipl": [6, 10], "note": [6, 12], "onli": [6, 10, 12], "support": [6, 12], "encod": 6, "utf": 6, "8": [6, 13], "read": [6, 10, 12], "convert": [6, 7, 8, 12], "local": 6, "folder": 6, "construct": 6, "io": 6, "classmethod": [6, 10], "point": [6, 12], "b": 6, "iobas": 6, "basemodel": [6, 12], "pars": [6, 8, 12], "valid": [6, 8, 10], "keyword": [6, 10], "argument": [6, 7, 10], "validationerror": 6, "cannot": 6, "form": [6, 12], "spec": 6, "pydant": [6, 7, 12], "arbitrary_types_allow": [6, 11], "true": [6, 10], "access": [6, 8, 10, 12], "sep": [6, 8], "separ": 6, "pathlib": 6, "archiv": [6, 8], "tabular": [6, 8, 12], "between": [6, 8, 10], "datafram": [6, 8, 10, 12], "other": [6, 10, 12], "concaten": 6, "two": [6, 10, 12], "second": [6, 10], "merg": [6, 10, 12], "helper": 6, "handl": [6, 10, 12], "split": 6, "singl": [6, 10, 12], "directori": 6, "string": [6, 7, 8, 10, 12], "doe": 6, "either": [6, 9, 10, 12], "pash": 6, "depend": [6, 12], "record": [7, 10], "collect": [7, 10, 12], "motorcollect": 7, "session": 7, "motorclientsess": 7, "unit": [7, 12], "dct": 7, "modelmetaclass": 7, "schema": 7, "extra": 7, "objectid": [7, 12], "compat": [7, 12], "configur": 7, "baseconfig": 7, "db": [7, 9], "initi": [7, 10], "authconfig": 7, "administr": 7, "authent": 7, "authet": 7, "sourc": [7, 12, 13], "databas": [7, 8, 12], "node": 7, "ost": 7, "memori": [8, 10, 12], "seri": [8, 10, 12], "includ": [8, 9, 10], "mimick": 8, "fictici": 8, "o": [8, 10], "pathlik": [8, 10], "structur": [8, 12], "like": [8, 12], "delimit": 8, "help": 8, "pd": [8, 10, 12], "row": [8, 12], "self": [8, 12], "obj": 8, "insert": [8, 9], "cgnal": 8, "pandasarchiv": 8, "id": [8, 10, 12], "accord": [8, 10, 12], "dao": 8, "frame": 8, "satisfi": 8, "respect": [8, 12], "mani": 8, "inmemori": 8, "sql": 9, "alchemi": 9, "binaryexpress": 9, "booleanclauselist": 9, "sqlalchemyqueri": 9, "express": 9, "claus": 9, "engin": 9, "asyncengin": 9, "connect": 9, "correctli": 9, "t": 10, "defin": [10, 12], "interfac": [10, 12], "lazi": [10, 12], "fulli": [10, 12], "baseiterabletyp": 10, "over": 10, "timestamp": 10, "date": 10, "daili": 10, "frequenc": 10, "mon": 10, "fri": 10, "last": 10, "15": 10, "minut": 10, "compar": [10, 12], "fals": 10, "otherwis": 10, "freq": 10, "h": 10, "space": 10, "hour": 10, "m": 10, "": 10, "first": 10, "cachediterabletyp": 10, "thi": [10, 12], "composit": 10, "made": 10, "up": 10, "disjoint": 10, "aggreg": 10, "would": [10, 12], "present": 10, "simpl": [10, 12], "dill": [10, 13], "generator_funct": 10, "_type": 10, "allow": [10, 12], "via": 10, "generartor": 10, "requir": [10, 11], "typeerror": 10, "mismatch": 10, "happen": 10, "without": 10, "specif": [10, 12], "kwarg": 10, "lazyiterabletyp": 10, "method": [10, 12], "enhanc": 10, "enabl": 10, "approach": 10, "In": [10, 12], "particular": [10, 12], "among": [10, 12], "cl": 10, "parent": 10, "pass": [10, 12], "super": 10, "__new__": 10, "runtimeerror": 10, "version": [10, 13], "were": 10, "befor": 10, "100": 10, "dimens": 10, "yield": 10, "execut": 10, "each": 10, "t_co": 10, "n": 10, "taken": 10, "float": 10, "datetim": 10, "continu": [10, 12], "class_object_first": 10, "unidirectional_link": 10, "regist": 10, "chach": 10, "link": 10, "__call__": 10, "class_object_lazi": 10, "class_object_cach": 10, "can": [10, 12], "serialis": 10, "specifi": [10, 12], "feattyp": [10, 12], "labtyp": [10, 12], "deriv": 10, "alia": 10, "tdatasetutilsmixin": 10, "perform": [10, 12], "cast": 10, "x": [10, 12], "check": [10, 11], "compli": 10, "format": [10, 12], "them": [10, 12], "attributeerror": 10, "liter": 10, "arrai": [10, 12], "ndarrai": [10, 12], "ones": 10, "join": [10, 12], "lookback": 10, "look": [10, 12], "chang": [10, 12], "observ": [10, 12], "nest": [10, 12], "train": [10, 12], "datastructur": 10, "built": 10, "top": 10, "pandasdatafram": 10, "pack": 10, "togeth": 10, "obtain": 10, "numpi": [10, 12], "For": 10, "unsupervis": 10, "learn": [10, 12], "task": 10, "left": 10, "case": 10, "nor": 10, "tpandasdataset": 10, "drop": 10, "na": 10, "get": 10, "concat": [10, 12], "idx": 10, "find": 10, "length": 10, "time": [10, 12], "y": 10, "which": [10, 12], "nlp": [10, 12], "corpu": 10, "unpack": 10, "column": 10, "uuid": [10, 12], "k": [10, 12], "represent": 10, "coupl": [10, 12], "inform": [10, 12], "add": 10, "keyerror": 10, "remov": 10, "random": 10, "util": 10, "byte": 10, "12": 10, "digit": 10, "what": 11, "instal": 11, "exampl": 11, "how": 11, "contribut": 11, "ci": 11, "search": 11, "A": 12, "python": 12, "librari": 12, "optim": 12, "machin": 12, "pipelin": 12, "modular": 12, "design": 12, "power": 12, "build": 12, "ingest": 12, "run": 12, "offer": 12, "lightweight": 12, "orient": 12, "well": 12, "aim": 12, "extens": [12, 13], "develop": 12, "applic": 12, "focu": 12, "practic": 12, "clean": 12, "code": 12, "some": 12, "cool": 12, "we": 12, "proud": 12, "mention": 12, "decoupl": 12, "busi": 12, "detail": 12, "few": 12, "It": 12, "must": 12, "user": 12, "its": 12, "need": 12, "orm": 12, "follow": 12, "pypi": [12, 13], "server": [12, 13], "pip": [12, 13], "git": [12, 13], "clone": [12, 13], "http": [12, 13], "github": [12, 13], "com": [12, 13], "nicoladonelli": [12, 13], "cd": [12, 13], "make": [12, 13], "To": 12, "predefin": 12, "lint": 12, "possibl": 12, "As": 12, "imagin": 12, "import": 12, "my_id": 12, "my_data": 12, "want": 12, "disk": 12, "do": 12, "so": 12, "written": 12, "thu": 12, "entityseri": 12, "def": 12, "now": 12, "repo": 12, "1234": 12, "await": 12, "all_ent": 12, "increas": 12, "proper": 12, "backend": 12, "someth": 12, "scalabl": 12, "nosql": 12, "platform": 12, "our": 12, "bson": 12, "mongodataseri": 12, "doc": 12, "_id": 12, "previou": 12, "place": 12, "signatur": 12, "also": 12, "certain": 12, "retrieve_by_queri": 12, "howev": 12, "organ": 12, "therefor": 12, "notion": 12, "abstractmethod": 12, "entityqueryfactori": 12, "by_id": 12, "consid": 12, "mongoqueryfactori": 12, "1235": 12, "commonli": 12, "most": 12, "relev": 12, "lazili": 12, "numer": 12, "sum": 12, "hand": 12, "character": 12, "__init__": 12, "param": 12, "special": 12, "thought": 12, "deep": 12, "attribut": 12, "variou": 12, "fashion": 12, "share": 12, "chosen": 12, "np": 12, "nan": 12, "2": [12, 13], "3": [12, 13], "feat1": 12, "4": [12, 13], "feat2": 12, "axi": 12, "print": 12, "head": 12, "datestr": 12, "date_rang": 12, "2010": 12, "01": 12, "04": 12, "veri": 12, "much": 12, "willing": 12, "welcom": 12, "kind": 12, "bug": 12, "report": 12, "fix": 12, "codebas": 12, "improv": 12, "pleas": 12, "issu": 12, "tab": 12, "open": 12, "sure": 12, "guidelin": 12, "fork": 12, "choos": 12, "branch": 12, "your": 12, "break": 12, "pull": 12, "request": 12, "referenc": 12, "onc": 12, "pr": 12, "approv": 12, "maintain": 12, "main": 12, "py4ai": 13, "5": 13, "pymongo": 13, "setuptool": 13, "61": 13, "39": 13, "tomli": 13, "tornado": 13, "6": 13, "typeguard": 13, "13": 13, "aiosqlit": 13, "17": 13, "black": 13, "21": 13, "12b0": 13, "darglint": 13, "flake8": 13, "docstr": 13, "rst": 13, "pyproject": 13, "greenlet": 13, "isort": 13, "10": 13, "m2r2": 13, "mongomock": 13, "19": 13, "mongomock_motor": 13, "mypi": 13, "910": 13, "tool": 13, "pytest": 13, "cov": 13, "recommonmark": 13, "7": 13, "scipi": 13, "sphinx": 13, "rtd": 13, "theme": 13, "twine": 13, "basenam": 13}, "objects": {"": [[1, 0, 0, "-", "py4ai"]], "py4ai": [[2, 0, 0, "-", "data"]], "py4ai.data": [[3, 0, 0, "-", "datasets"], [2, 0, 0, "-", "exceptions"], [4, 0, 0, "-", "layer"], [10, 0, 0, "-", "model"]], "py4ai.data.datasets": [[3, 1, 1, "", "get_unbalanced_dataset"], [3, 1, 1, "", "get_weather_nyc_dataset"]], "py4ai.data.exceptions": [[2, 2, 1, "", "NoTableException"]], "py4ai.data.layer": [[5, 0, 0, "-", "common"], [6, 0, 0, "-", "fs"], [7, 0, 0, "-", "mongo"], [8, 0, 0, "-", "pandas"], [9, 0, 0, "-", "sqlalchemy"]], "py4ai.data.layer.common": [[5, 0, 0, "-", "criteria"], [5, 0, 0, "-", "repository"], [5, 0, 0, "-", "serialiazer"]], "py4ai.data.layer.common.criteria": [[5, 3, 1, "", "BaseCriteria"], [5, 3, 1, "", "SearchCriteria"]], "py4ai.data.layer.common.criteria.BaseCriteria": [[5, 4, 1, "", "query"]], "py4ai.data.layer.common.repository": [[5, 3, 1, "", "Paged"], [5, 3, 1, "", "QueryOptions"], [5, 3, 1, "", "Repository"], [5, 3, 1, "", "SortingDirection"]], "py4ai.data.layer.common.repository.Paged": [[5, 5, 1, "", "items"], [5, 5, 1, "", "more_pages"], [5, 5, 1, "", "size"]], "py4ai.data.layer.common.repository.QueryOptions": [[5, 6, 1, "", "copy"]], "py4ai.data.layer.common.repository.Repository": [[5, 6, 1, "", "create"], [5, 6, 1, "", "delete"], [5, 6, 1, "", "delete_by_criteria"], [5, 6, 1, "", "list"], [5, 6, 1, "", "retrieve"], [5, 6, 1, "", "retrieve_by_criteria"], [5, 6, 1, "", "save"], [5, 4, 1, "", "serializer"]], "py4ai.data.layer.common.repository.SortingDirection": [[5, 5, 1, "", "ASC"], [5, 5, 1, "", "DES"]], "py4ai.data.layer.common.serialiazer": [[5, 3, 1, "", "DataSerializer"]], "py4ai.data.layer.common.serialiazer.DataSerializer": [[5, 6, 1, "", "get_key"], [5, 6, 1, "", "to_entity"], [5, 6, 1, "", "to_object"], [5, 6, 1, "", "to_object_key"]], "py4ai.data.layer.fs": [[6, 1, 1, "", "complete_path_split"], [6, 1, 1, "", "create_dir_if_not_exists"], [6, 0, 0, "-", "criteria"], [6, 0, 0, "-", "repository"], [6, 0, 0, "-", "serializer"], [6, 0, 0, "-", "tables"]], "py4ai.data.layer.fs.criteria": [[6, 3, 1, "", "FileSystemCriteriaFactory"], [6, 3, 1, "", "FileSystemSearchCriteria"]], "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory": [[6, 6, 1, "", "all"], [6, 6, 1, "", "filter_path_by_condition"], [6, 6, 1, "", "format_name"], [6, 6, 1, "", "get_index_fields"], [6, 4, 1, "", "index"], [6, 6, 1, "", "sort_by"], [6, 6, 1, "", "update_index"]], "py4ai.data.layer.fs.criteria.FileSystemSearchCriteria": [[6, 4, 1, "", "query"]], "py4ai.data.layer.fs.repository": [[6, 3, 1, "", "FileSystemRepository"]], "py4ai.data.layer.fs.repository.FileSystemRepository": [[6, 6, 1, "", "create"], [6, 5, 1, "", "criteria"], [6, 6, 1, "", "delete"], [6, 6, 1, "", "delete_by_criteria"], [6, 6, 1, "", "list"], [6, 6, 1, "", "retrieve"], [6, 6, 1, "", "retrieve_by_criteria"], [6, 6, 1, "", "save"], [6, 4, 1, "", "serializer"]], "py4ai.data.layer.fs.serializer": [[6, 3, 1, "", "FileSerializer"], [6, 3, 1, "", "FileSerializerMode"], [6, 3, 1, "", "IndexedIO"]], "py4ai.data.layer.fs.serializer.FileSerializer": [[6, 5, 1, "", "mode"], [6, 6, 1, "", "with_path"]], "py4ai.data.layer.fs.serializer.FileSerializerMode": [[6, 5, 1, "", "BINARY"], [6, 5, 1, "", "TEXT"]], "py4ai.data.layer.fs.serializer.IndexedIO": [[6, 3, 1, "", "Config"], [6, 5, 1, "", "buffer"], [6, 5, 1, "", "name"]], "py4ai.data.layer.fs.serializer.IndexedIO.Config": [[6, 5, 1, "", "arbitrary_types_allowed"]], "py4ai.data.layer.fs.tables": [[6, 3, 1, "", "CsvSerializer"], [6, 3, 1, "", "LocalDatabase"], [6, 3, 1, "", "PickleSerializer"], [6, 3, 1, "", "TabularData"]], "py4ai.data.layer.fs.tables.CsvSerializer": [[6, 6, 1, "", "get_key"], [6, 5, 1, "", "mode"], [6, 6, 1, "", "to_entity"], [6, 6, 1, "", "to_object"], [6, 6, 1, "", "to_object_key"]], "py4ai.data.layer.fs.tables.LocalDatabase": [[6, 5, 1, "", "criteria"]], "py4ai.data.layer.fs.tables.PickleSerializer": [[6, 5, 1, "", "mode"], [6, 6, 1, "", "to_entity"], [6, 6, 1, "", "to_object"], [6, 6, 1, "", "to_object_key"]], "py4ai.data.layer.fs.tables.TabularData": [[6, 3, 1, "", "Config"], [6, 5, 1, "", "data"], [6, 5, 1, "", "name"], [6, 6, 1, "", "update"]], "py4ai.data.layer.fs.tables.TabularData.Config": [[6, 5, 1, "", "arbitrary_types_allowed"]], "py4ai.data.layer.mongo": [[7, 3, 1, "", "MongoConfig"], [7, 0, 0, "-", "criteria"], [7, 0, 0, "-", "repository"], [7, 0, 0, "-", "serializer"]], "py4ai.data.layer.mongo.MongoConfig": [[7, 4, 1, "", "admin"], [7, 4, 1, "", "auth"], [7, 4, 1, "", "authSource"], [7, 4, 1, "", "db_name"], [7, 6, 1, "", "getCollection"], [7, 4, 1, "", "host"], [7, 4, 1, "", "port"]], "py4ai.data.layer.mongo.criteria": [[7, 3, 1, "", "MongoSearchCriteria"]], "py4ai.data.layer.mongo.criteria.MongoSearchCriteria": [[7, 6, 1, "", "empty"], [7, 4, 1, "", "query"]], "py4ai.data.layer.mongo.repository": [[7, 3, 1, "", "MongoRepository"]], "py4ai.data.layer.mongo.repository.MongoRepository": [[7, 6, 1, "", "create"], [7, 6, 1, "", "delete"], [7, 6, 1, "", "delete_by_criteria"], [7, 6, 1, "", "list"], [7, 6, 1, "", "retrieve"], [7, 6, 1, "", "retrieve_by_criteria"], [7, 6, 1, "", "save"], [7, 4, 1, "", "serializer"]], "py4ai.data.layer.mongo.serializer": [[7, 3, 1, "", "MongoModel"], [7, 1, 1, "", "create_mongo_id"]], "py4ai.data.layer.pandas": [[8, 0, 0, "-", "criteria"], [8, 0, 0, "-", "repository"]], "py4ai.data.layer.pandas.criteria": [[8, 3, 1, "", "PandasSearchCriteria"]], "py4ai.data.layer.pandas.criteria.PandasSearchCriteria": [[8, 6, 1, "", "empty"], [8, 4, 1, "", "query"]], "py4ai.data.layer.pandas.repository": [[8, 3, 1, "", "CsvRepository"], [8, 3, 1, "", "PandasRepository"]], "py4ai.data.layer.pandas.repository.PandasRepository": [[8, 6, 1, "", "commit"], [8, 6, 1, "", "create"], [8, 4, 1, "", "data"], [8, 6, 1, "", "delete"], [8, 6, 1, "", "delete_by_criteria"], [8, 6, 1, "", "list"], [8, 6, 1, "", "retrieve"], [8, 6, 1, "", "retrieve_by_criteria"], [8, 6, 1, "", "save"], [8, 4, 1, "", "serializer"]], "py4ai.data.layer.sqlalchemy": [[9, 0, 0, "-", "criteria"], [9, 0, 0, "-", "repository"], [9, 0, 0, "-", "serializer"]], "py4ai.data.layer.sqlalchemy.criteria": [[9, 3, 1, "", "SqlAlchemySearchCriteria"]], "py4ai.data.layer.sqlalchemy.criteria.SqlAlchemySearchCriteria": [[9, 6, 1, "", "empty"], [9, 4, 1, "", "query"]], "py4ai.data.layer.sqlalchemy.repository": [[9, 3, 1, "", "SqlAlchemyRepository"]], "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository": [[9, 6, 1, "", "create"], [9, 6, 1, "", "delete"], [9, 6, 1, "", "delete_by_criteria"], [9, 6, 1, "", "list"], [9, 6, 1, "", "retrieve"], [9, 6, 1, "", "retrieve_by_criteria"], [9, 6, 1, "", "save"], [9, 4, 1, "", "serializer"]], "py4ai.data.layer.sqlalchemy.serializer": [[9, 3, 1, "", "SqlAlchemySerializer"]], "py4ai.data.model": [[10, 0, 0, "-", "core"], [10, 0, 0, "-", "ml"], [10, 0, 0, "-", "text"]], "py4ai.data.model.core": [[10, 3, 1, "", "BaseIterable"], [10, 3, 1, "", "BaseRange"], [10, 3, 1, "", "CachedIterable"], [10, 3, 1, "", "CompositeRange"], [10, 3, 1, "", "DillSerialization"], [10, 3, 1, "", "IterGenerator"], [10, 3, 1, "", "IterableUtilsMixin"], [10, 3, 1, "", "LazyIterable"], [10, 3, 1, "", "PickleSerialization"], [10, 3, 1, "", "Range"], [10, 3, 1, "", "RegisterLazyCachedIterables"], [10, 3, 1, "", "Serializable"]], "py4ai.data.model.core.BaseIterable": [[10, 4, 1, "", "cached"], [10, 6, 1, "", "empty"], [10, 4, 1, "", "items"], [10, 4, 1, "", "type"]], "py4ai.data.model.core.BaseRange": [[10, 4, 1, "", "business_days"], [10, 4, 1, "", "days"], [10, 4, 1, "", "end"], [10, 4, 1, "", "minutes_15"], [10, 6, 1, "", "overlaps"], [10, 6, 1, "", "range"], [10, 4, 1, "", "start"]], "py4ai.data.model.core.CachedIterable": [[10, 4, 1, "", "cached"], [10, 6, 1, "", "empty"], [10, 6, 1, "", "from_iterable"], [10, 4, 1, "", "items"]], "py4ai.data.model.core.CompositeRange": [[10, 4, 1, "", "end"], [10, 6, 1, "", "overlaps"], [10, 6, 1, "", "range"], [10, 6, 1, "", "simplify"], [10, 4, 1, "", "start"]], "py4ai.data.model.core.DillSerialization": [[10, 6, 1, "", "load"], [10, 6, 1, "", "write"]], "py4ai.data.model.core.IterGenerator": [[10, 4, 1, "", "iterator"]], "py4ai.data.model.core.IterableUtilsMixin": [[10, 6, 1, "", "batch"], [10, 5, 1, "", "cached_type"], [10, 6, 1, "", "filter"], [10, 6, 1, "", "foreach"], [10, 6, 1, "", "from_element"], [10, 5, 1, "", "lazy_type"], [10, 6, 1, "", "map"], [10, 6, 1, "", "take"], [10, 6, 1, "", "to_cached"], [10, 6, 1, "", "to_lazy"]], "py4ai.data.model.core.LazyIterable": [[10, 4, 1, "", "cached"], [10, 6, 1, "", "empty"], [10, 6, 1, "", "from_iterable"], [10, 4, 1, "", "items"]], "py4ai.data.model.core.PickleSerialization": [[10, 6, 1, "", "load"], [10, 6, 1, "", "write"]], "py4ai.data.model.core.Range": [[10, 4, 1, "", "end"], [10, 6, 1, "", "overlaps"], [10, 6, 1, "", "range"], [10, 4, 1, "", "start"]], "py4ai.data.model.core.RegisterLazyCachedIterables": [[10, 6, 1, "", "register_cached"], [10, 6, 1, "", "register_lazy"]], "py4ai.data.model.core.Serializable": [[10, 6, 1, "", "load"], [10, 6, 1, "", "write"]], "py4ai.data.model.ml": [[10, 3, 1, "", "CachedDataset"], [10, 3, 1, "", "DatasetUtilsMixin"], [10, 3, 1, "", "LazyDataset"], [10, 3, 1, "", "MultiFeatureSample"], [10, 3, 1, "", "PandasDataset"], [10, 3, 1, "", "PandasTimeIndexedDataset"], [10, 3, 1, "", "Sample"], [10, 1, 1, "", "features_and_labels_to_dataset"]], "py4ai.data.model.ml.CachedDataset": [[10, 5, 1, "", "cached_type"], [10, 5, 1, "", "lazy_type"], [10, 6, 1, "", "to_df"], [10, 6, 1, "", "union"]], "py4ai.data.model.ml.DatasetUtilsMixin": [[10, 4, 1, "", "asPandasDataset"], [10, 5, 1, "", "cached_type"], [10, 6, 1, "", "checkNames"], [10, 6, 1, "", "getFeaturesAs"], [10, 6, 1, "", "getLabelsAs"], [10, 5, 1, "", "lazy_type"], [10, 6, 1, "", "type"], [10, 6, 1, "", "union"]], "py4ai.data.model.ml.LazyDataset": [[10, 5, 1, "", "cached_type"], [10, 6, 1, "", "features"], [10, 6, 1, "", "getFeaturesAs"], [10, 6, 1, "", "getLabelsAs"], [10, 6, 1, "", "labels"], [10, 5, 1, "", "lazy_type"], [10, 6, 1, "", "union"], [10, 6, 1, "", "withLookback"]], "py4ai.data.model.ml.PandasDataset": [[10, 4, 1, "", "cached"], [10, 5, 1, "", "cached_type"], [10, 6, 1, "", "createObject"], [10, 6, 1, "", "dropna"], [10, 6, 1, "", "empty"], [10, 4, 1, "", "features"], [10, 6, 1, "", "from_sequence"], [10, 6, 1, "", "getFeaturesAs"], [10, 6, 1, "", "getLabelsAs"], [10, 4, 1, "", "index"], [10, 6, 1, "", "intersection"], [10, 4, 1, "", "items"], [10, 4, 1, "", "labels"], [10, 5, 1, "", "lazy_type"], [10, 6, 1, "", "loc"], [10, 6, 1, "", "takeAsPandas"], [10, 6, 1, "", "union"]], "py4ai.data.model.text": [[10, 3, 1, "", "CachedDocuments"], [10, 3, 1, "", "Document"], [10, 3, 1, "", "DocumentsUtilsMixin"], [10, 3, 1, "", "LazyDocuments"], [10, 1, 1, "", "generate_random_uuid"]], "py4ai.data.model.text.CachedDocuments": [[10, 5, 1, "", "cached_type"], [10, 5, 1, "", "lazy_type"], [10, 6, 1, "", "to_df"]], "py4ai.data.model.text.Document": [[10, 6, 1, "", "addProperty"], [10, 4, 1, "", "author"], [10, 6, 1, "", "getOrThrow"], [10, 6, 1, "", "items"], [10, 4, 1, "", "language"], [10, 4, 1, "", "properties"], [10, 6, 1, "", "removeProperty"], [10, 6, 1, "", "setRandomUUID"], [10, 4, 1, "", "text"]], "py4ai.data.model.text.DocumentsUtilsMixin": [[10, 5, 1, "", "cached_type"], [10, 5, 1, "", "lazy_type"], [10, 4, 1, "", "type"]], "py4ai.data.model.text.LazyDocuments": [[10, 5, 1, "", "cached_type"], [10, 5, 1, "", "lazy_type"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:exception", "3": "py:class", "4": "py:property", "5": "py:attribute", "6": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "exception", "Python exception"], "3": ["py", "class", "Python class"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"]}, "titleterms": {"py4ai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "namespac": 1, "subpackag": [1, 2, 4], "data": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "submodul": [2, 5, 6, 7, 8, 9, 10], "except": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10], "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13], "dataset": 3, "layer": [4, 5, 6, 7, 8, 9, 12], "common": 5, "criteria": [5, 6, 7, 8, 9], "repositori": [5, 6, 7, 8, 9], "serialiaz": 5, "f": 6, "serial": [6, 7, 9], "tabl": [6, 11, 13], "mongo": 7, "panda": 8, "sqlalchemi": 9, "model": [10, 12], "core": 10, "ml": 10, "text": 10, "welcom": 11, "document": 11, "intro": 11, "user": 11, "guid": 11, "develop": 11, "indic": 11, "what": 12, "i": 12, "featur": 12, "instal": [12, 13], "test": 12, "check": 12, "exampl": 12, "abstract": 12, "queri": 12, "how": 12, "contribut": 12, "where": 12, "start": 12, "requir": 13, "ci": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"py4ai": [[0, "py4ai"]], "py4ai namespace": [[1, "module-py4ai"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"], [4, "subpackages"]], "py4ai.data package": [[2, "py4ai-data-package"]], "Submodules": [[2, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "py4ai.data.exceptions module": [[2, "module-py4ai.data.exceptions"]], "Module contents": [[2, "module-py4ai.data"], [3, "module-py4ai.data.datasets"], [4, "module-py4ai.data.layer"], [5, "module-py4ai.data.layer.common"], [6, "module-py4ai.data.layer.fs"], [7, "module-py4ai.data.layer.mongo"], [8, "module-py4ai.data.layer.pandas"], [9, "module-py4ai.data.layer.sqlalchemy"], [10, "module-py4ai.data.model"]], "py4ai.data.datasets package": [[3, "py4ai-data-datasets-package"]], "py4ai.data.layer package": [[4, "py4ai-data-layer-package"]], "py4ai.data.layer.common package": [[5, "py4ai-data-layer-common-package"]], "py4ai.data.layer.common.criteria module": [[5, "module-py4ai.data.layer.common.criteria"]], "py4ai.data.layer.common.repository module": [[5, "module-py4ai.data.layer.common.repository"]], "py4ai.data.layer.common.serialiazer module": [[5, "module-py4ai.data.layer.common.serialiazer"]], "py4ai.data.layer.fs package": [[6, "py4ai-data-layer-fs-package"]], "py4ai.data.layer.fs.criteria module": [[6, "module-py4ai.data.layer.fs.criteria"]], "py4ai.data.layer.fs.repository module": [[6, "module-py4ai.data.layer.fs.repository"]], "py4ai.data.layer.fs.serializer module": [[6, "module-py4ai.data.layer.fs.serializer"]], "py4ai.data.layer.fs.tables module": [[6, "module-py4ai.data.layer.fs.tables"]], "py4ai.data.layer.mongo package": [[7, "py4ai-data-layer-mongo-package"]], "py4ai.data.layer.mongo.criteria module": [[7, "module-py4ai.data.layer.mongo.criteria"]], "py4ai.data.layer.mongo.repository module": [[7, "module-py4ai.data.layer.mongo.repository"]], "py4ai.data.layer.mongo.serializer module": [[7, "module-py4ai.data.layer.mongo.serializer"]], "py4ai.data.layer.pandas package": [[8, "py4ai-data-layer-pandas-package"]], "py4ai.data.layer.pandas.criteria module": [[8, "module-py4ai.data.layer.pandas.criteria"]], "py4ai.data.layer.pandas.repository module": [[8, "module-py4ai.data.layer.pandas.repository"]], "py4ai.data.layer.sqlalchemy package": [[9, "py4ai-data-layer-sqlalchemy-package"]], "py4ai.data.layer.sqlalchemy.criteria module": [[9, "module-py4ai.data.layer.sqlalchemy.criteria"]], "py4ai.data.layer.sqlalchemy.repository module": [[9, "module-py4ai.data.layer.sqlalchemy.repository"]], "py4ai.data.layer.sqlalchemy.serializer module": [[9, "module-py4ai.data.layer.sqlalchemy.serializer"]], "py4ai.data.model package": [[10, "py4ai-data-model-package"]], "py4ai.data.model.core module": [[10, "module-py4ai.data.model.core"]], "py4ai.data.model.ml module": [[10, "module-py4ai.data.model.ml"]], "py4ai.data.model.text module": [[10, "module-py4ai.data.model.text"]], "Welcome to py4ai-data documentation!": [[11, "welcome-to-py4ai-data-documentation"]], "Intro:": [[11, null]], "User Guide": [[11, null]], "Developer Guide:": [[11, null]], "Indices and tables": [[11, "indices-and-tables"]], "py4ai data": [[12, "py4ai-data"]], "What is it ?": [[12, "what-is-it"]], "Features": [[12, "features"], [12, "id1"]], "Data layers": [[12, "data-layers"]], "Data Model": [[12, "data-model"], [12, "id3"]], "Installation": [[12, "installation"], [13, "installation"], [13, "id1"]], "Tests": [[12, "tests"]], "Checks": [[12, "checks"]], "Examples": [[12, "examples"]], "Data Layers": [[12, "id2"]], "Abstracting Data Querying": [[12, "abstracting-data-querying"]], "How to contribute ?": [[12, "how-to-contribute"]], "Where to start ?": [[12, "where-to-start"]], "Contributing to py4ai-data": [[12, "contributing-to-py4ai-data"]], "Table of Contents": [[13, "table-of-contents"]], "Package Requirements": [[13, "package-requirements"]], "CI Requirements": [[13, "ci-requirements"]]}, "indexentries": {"module": [[1, "module-py4ai"], [2, "module-py4ai.data"], [2, "module-py4ai.data.exceptions"], [3, "module-py4ai.data.datasets"], [4, "module-py4ai.data.layer"], [5, "module-py4ai.data.layer.common"], [5, "module-py4ai.data.layer.common.criteria"], [5, "module-py4ai.data.layer.common.repository"], [5, "module-py4ai.data.layer.common.serialiazer"], [6, "module-py4ai.data.layer.fs"], [6, "module-py4ai.data.layer.fs.criteria"], [6, "module-py4ai.data.layer.fs.repository"], [6, "module-py4ai.data.layer.fs.serializer"], [6, "module-py4ai.data.layer.fs.tables"], [7, "module-py4ai.data.layer.mongo"], [7, "module-py4ai.data.layer.mongo.criteria"], [7, "module-py4ai.data.layer.mongo.repository"], [7, "module-py4ai.data.layer.mongo.serializer"], [8, "module-py4ai.data.layer.pandas"], [8, "module-py4ai.data.layer.pandas.criteria"], [8, "module-py4ai.data.layer.pandas.repository"], [9, "module-py4ai.data.layer.sqlalchemy"], [9, "module-py4ai.data.layer.sqlalchemy.criteria"], [9, "module-py4ai.data.layer.sqlalchemy.repository"], [9, "module-py4ai.data.layer.sqlalchemy.serializer"], [10, "module-py4ai.data.model"], [10, "module-py4ai.data.model.core"], [10, "module-py4ai.data.model.ml"], [10, "module-py4ai.data.model.text"]], "py4ai": [[1, "module-py4ai"]], "notableexception": [[2, "py4ai.data.exceptions.NoTableException"]], "py4ai.data": [[2, "module-py4ai.data"]], "py4ai.data.exceptions": [[2, "module-py4ai.data.exceptions"]], "get_unbalanced_dataset() (in module py4ai.data.datasets)": [[3, "py4ai.data.datasets.get_unbalanced_dataset"]], "get_weather_nyc_dataset() (in module py4ai.data.datasets)": [[3, "py4ai.data.datasets.get_weather_nyc_dataset"]], "py4ai.data.datasets": [[3, "module-py4ai.data.datasets"]], "py4ai.data.layer": [[4, "module-py4ai.data.layer"]], "asc (py4ai.data.layer.common.repository.sortingdirection attribute)": [[5, "py4ai.data.layer.common.repository.SortingDirection.ASC"]], "basecriteria (class in py4ai.data.layer.common.criteria)": [[5, "py4ai.data.layer.common.criteria.BaseCriteria"]], "des (py4ai.data.layer.common.repository.sortingdirection attribute)": [[5, "py4ai.data.layer.common.repository.SortingDirection.DES"]], "dataserializer (class in py4ai.data.layer.common.serialiazer)": [[5, "py4ai.data.layer.common.serialiazer.DataSerializer"]], "paged (class in py4ai.data.layer.common.repository)": [[5, "py4ai.data.layer.common.repository.Paged"]], "queryoptions (class in py4ai.data.layer.common.repository)": [[5, "py4ai.data.layer.common.repository.QueryOptions"]], "repository (class in py4ai.data.layer.common.repository)": [[5, "py4ai.data.layer.common.repository.Repository"]], "searchcriteria (class in py4ai.data.layer.common.criteria)": [[5, "py4ai.data.layer.common.criteria.SearchCriteria"]], "sortingdirection (class in py4ai.data.layer.common.repository)": [[5, "py4ai.data.layer.common.repository.SortingDirection"]], "copy() (py4ai.data.layer.common.repository.queryoptions method)": [[5, "py4ai.data.layer.common.repository.QueryOptions.copy"]], "create() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.create"]], "delete() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.delete"]], "delete_by_criteria() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.delete_by_criteria"]], "get_key() (py4ai.data.layer.common.serialiazer.dataserializer method)": [[5, "py4ai.data.layer.common.serialiazer.DataSerializer.get_key"]], "items (py4ai.data.layer.common.repository.paged attribute)": [[5, "py4ai.data.layer.common.repository.Paged.items"]], "list() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.list"]], "more_pages (py4ai.data.layer.common.repository.paged attribute)": [[5, "py4ai.data.layer.common.repository.Paged.more_pages"]], "py4ai.data.layer.common": [[5, "module-py4ai.data.layer.common"]], "py4ai.data.layer.common.criteria": [[5, "module-py4ai.data.layer.common.criteria"]], "py4ai.data.layer.common.repository": [[5, "module-py4ai.data.layer.common.repository"]], "py4ai.data.layer.common.serialiazer": [[5, "module-py4ai.data.layer.common.serialiazer"]], "query (py4ai.data.layer.common.criteria.basecriteria property)": [[5, "py4ai.data.layer.common.criteria.BaseCriteria.query"]], "retrieve() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.retrieve"]], "retrieve_by_criteria() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.retrieve_by_criteria"]], "save() (py4ai.data.layer.common.repository.repository method)": [[5, "py4ai.data.layer.common.repository.Repository.save"]], "serializer (py4ai.data.layer.common.repository.repository property)": [[5, "py4ai.data.layer.common.repository.Repository.serializer"]], "size (py4ai.data.layer.common.repository.paged attribute)": [[5, "py4ai.data.layer.common.repository.Paged.size"]], "to_entity() (py4ai.data.layer.common.serialiazer.dataserializer method)": [[5, "py4ai.data.layer.common.serialiazer.DataSerializer.to_entity"]], "to_object() (py4ai.data.layer.common.serialiazer.dataserializer method)": [[5, "py4ai.data.layer.common.serialiazer.DataSerializer.to_object"]], "to_object_key() (py4ai.data.layer.common.serialiazer.dataserializer method)": [[5, "py4ai.data.layer.common.serialiazer.DataSerializer.to_object_key"]], "binary (py4ai.data.layer.fs.serializer.fileserializermode attribute)": [[6, "py4ai.data.layer.fs.serializer.FileSerializerMode.BINARY"]], "csvserializer (class in py4ai.data.layer.fs.tables)": [[6, "py4ai.data.layer.fs.tables.CsvSerializer"]], "fileserializer (class in py4ai.data.layer.fs.serializer)": [[6, "py4ai.data.layer.fs.serializer.FileSerializer"]], "fileserializermode (class in py4ai.data.layer.fs.serializer)": [[6, "py4ai.data.layer.fs.serializer.FileSerializerMode"]], "filesystemcriteriafactory (class in py4ai.data.layer.fs.criteria)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory"]], "filesystemrepository (class in py4ai.data.layer.fs.repository)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository"]], "filesystemsearchcriteria (class in py4ai.data.layer.fs.criteria)": [[6, "py4ai.data.layer.fs.criteria.FileSystemSearchCriteria"]], "indexedio (class in py4ai.data.layer.fs.serializer)": [[6, "py4ai.data.layer.fs.serializer.IndexedIO"]], "indexedio.config (class in py4ai.data.layer.fs.serializer)": [[6, "py4ai.data.layer.fs.serializer.IndexedIO.Config"]], "localdatabase (class in py4ai.data.layer.fs.tables)": [[6, "py4ai.data.layer.fs.tables.LocalDatabase"]], "pickleserializer (class in py4ai.data.layer.fs.tables)": [[6, "py4ai.data.layer.fs.tables.PickleSerializer"]], "text (py4ai.data.layer.fs.serializer.fileserializermode attribute)": [[6, "py4ai.data.layer.fs.serializer.FileSerializerMode.TEXT"]], "tabulardata (class in py4ai.data.layer.fs.tables)": [[6, "py4ai.data.layer.fs.tables.TabularData"]], "tabulardata.config (class in py4ai.data.layer.fs.tables)": [[6, "py4ai.data.layer.fs.tables.TabularData.Config"]], "all() (py4ai.data.layer.fs.criteria.filesystemcriteriafactory method)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.all"]], "arbitrary_types_allowed (py4ai.data.layer.fs.serializer.indexedio.config attribute)": [[6, "py4ai.data.layer.fs.serializer.IndexedIO.Config.arbitrary_types_allowed"]], "arbitrary_types_allowed (py4ai.data.layer.fs.tables.tabulardata.config attribute)": [[6, "py4ai.data.layer.fs.tables.TabularData.Config.arbitrary_types_allowed"]], "buffer (py4ai.data.layer.fs.serializer.indexedio attribute)": [[6, "py4ai.data.layer.fs.serializer.IndexedIO.buffer"]], "complete_path_split() (in module py4ai.data.layer.fs)": [[6, "py4ai.data.layer.fs.complete_path_split"]], "create() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.create"]], "create_dir_if_not_exists() (in module py4ai.data.layer.fs)": [[6, "py4ai.data.layer.fs.create_dir_if_not_exists"]], "criteria (py4ai.data.layer.fs.repository.filesystemrepository attribute)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.criteria"]], "criteria (py4ai.data.layer.fs.tables.localdatabase attribute)": [[6, "py4ai.data.layer.fs.tables.LocalDatabase.criteria"]], "data (py4ai.data.layer.fs.tables.tabulardata attribute)": [[6, "py4ai.data.layer.fs.tables.TabularData.data"]], "delete() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.delete"]], "delete_by_criteria() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.delete_by_criteria"]], "filter_path_by_condition() (py4ai.data.layer.fs.criteria.filesystemcriteriafactory method)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.filter_path_by_condition"]], "format_name() (py4ai.data.layer.fs.criteria.filesystemcriteriafactory static method)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.format_name"]], "get_index_fields() (py4ai.data.layer.fs.criteria.filesystemcriteriafactory method)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.get_index_fields"]], "get_key() (py4ai.data.layer.fs.tables.csvserializer method)": [[6, "py4ai.data.layer.fs.tables.CsvSerializer.get_key"]], "index (py4ai.data.layer.fs.criteria.filesystemcriteriafactory property)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.index"]], "list() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.list"]], "mode (py4ai.data.layer.fs.serializer.fileserializer attribute)": [[6, "py4ai.data.layer.fs.serializer.FileSerializer.mode"]], "mode (py4ai.data.layer.fs.tables.csvserializer attribute)": [[6, "py4ai.data.layer.fs.tables.CsvSerializer.mode"]], "mode (py4ai.data.layer.fs.tables.pickleserializer attribute)": [[6, "py4ai.data.layer.fs.tables.PickleSerializer.mode"]], "name (py4ai.data.layer.fs.serializer.indexedio attribute)": [[6, "py4ai.data.layer.fs.serializer.IndexedIO.name"]], "name (py4ai.data.layer.fs.tables.tabulardata attribute)": [[6, "py4ai.data.layer.fs.tables.TabularData.name"]], "py4ai.data.layer.fs": [[6, "module-py4ai.data.layer.fs"]], "py4ai.data.layer.fs.criteria": [[6, "module-py4ai.data.layer.fs.criteria"]], "py4ai.data.layer.fs.repository": [[6, "module-py4ai.data.layer.fs.repository"]], "py4ai.data.layer.fs.serializer": [[6, "module-py4ai.data.layer.fs.serializer"]], "py4ai.data.layer.fs.tables": [[6, "module-py4ai.data.layer.fs.tables"]], "query (py4ai.data.layer.fs.criteria.filesystemsearchcriteria property)": [[6, "py4ai.data.layer.fs.criteria.FileSystemSearchCriteria.query"]], "retrieve() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.retrieve"]], "retrieve_by_criteria() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.retrieve_by_criteria"]], "save() (py4ai.data.layer.fs.repository.filesystemrepository method)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.save"]], "serializer (py4ai.data.layer.fs.repository.filesystemrepository property)": [[6, "py4ai.data.layer.fs.repository.FileSystemRepository.serializer"]], "sort_by() (py4ai.data.layer.fs.criteria.filesystemcriteriafactory method)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.sort_by"]], "to_entity() (py4ai.data.layer.fs.tables.csvserializer method)": [[6, "py4ai.data.layer.fs.tables.CsvSerializer.to_entity"]], "to_entity() (py4ai.data.layer.fs.tables.pickleserializer method)": [[6, "py4ai.data.layer.fs.tables.PickleSerializer.to_entity"]], "to_object() (py4ai.data.layer.fs.tables.csvserializer method)": [[6, "py4ai.data.layer.fs.tables.CsvSerializer.to_object"]], "to_object() (py4ai.data.layer.fs.tables.pickleserializer method)": [[6, "py4ai.data.layer.fs.tables.PickleSerializer.to_object"]], "to_object_key() (py4ai.data.layer.fs.tables.csvserializer method)": [[6, "py4ai.data.layer.fs.tables.CsvSerializer.to_object_key"]], "to_object_key() (py4ai.data.layer.fs.tables.pickleserializer method)": [[6, "py4ai.data.layer.fs.tables.PickleSerializer.to_object_key"]], "update() (py4ai.data.layer.fs.tables.tabulardata method)": [[6, "py4ai.data.layer.fs.tables.TabularData.update"]], "update_index() (py4ai.data.layer.fs.criteria.filesystemcriteriafactory method)": [[6, "py4ai.data.layer.fs.criteria.FileSystemCriteriaFactory.update_index"]], "with_path() (py4ai.data.layer.fs.serializer.fileserializer class method)": [[6, "py4ai.data.layer.fs.serializer.FileSerializer.with_path"]], "mongoconfig (class in py4ai.data.layer.mongo)": [[7, "py4ai.data.layer.mongo.MongoConfig"]], "mongomodel (class in py4ai.data.layer.mongo.serializer)": [[7, "py4ai.data.layer.mongo.serializer.MongoModel"]], "mongorepository (class in py4ai.data.layer.mongo.repository)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository"]], "mongosearchcriteria (class in py4ai.data.layer.mongo.criteria)": [[7, "py4ai.data.layer.mongo.criteria.MongoSearchCriteria"]], "admin (py4ai.data.layer.mongo.mongoconfig property)": [[7, "py4ai.data.layer.mongo.MongoConfig.admin"]], "auth (py4ai.data.layer.mongo.mongoconfig property)": [[7, "py4ai.data.layer.mongo.MongoConfig.auth"]], "authsource (py4ai.data.layer.mongo.mongoconfig property)": [[7, "py4ai.data.layer.mongo.MongoConfig.authSource"]], "create() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.create"]], "create_mongo_id() (in module py4ai.data.layer.mongo.serializer)": [[7, "py4ai.data.layer.mongo.serializer.create_mongo_id"]], "db_name (py4ai.data.layer.mongo.mongoconfig property)": [[7, "py4ai.data.layer.mongo.MongoConfig.db_name"]], "delete() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.delete"]], "delete_by_criteria() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.delete_by_criteria"]], "empty() (py4ai.data.layer.mongo.criteria.mongosearchcriteria static method)": [[7, "py4ai.data.layer.mongo.criteria.MongoSearchCriteria.empty"]], "getcollection() (py4ai.data.layer.mongo.mongoconfig method)": [[7, "py4ai.data.layer.mongo.MongoConfig.getCollection"]], "host (py4ai.data.layer.mongo.mongoconfig property)": [[7, "py4ai.data.layer.mongo.MongoConfig.host"]], "list() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.list"]], "port (py4ai.data.layer.mongo.mongoconfig property)": [[7, "py4ai.data.layer.mongo.MongoConfig.port"]], "py4ai.data.layer.mongo": [[7, "module-py4ai.data.layer.mongo"]], "py4ai.data.layer.mongo.criteria": [[7, "module-py4ai.data.layer.mongo.criteria"]], "py4ai.data.layer.mongo.repository": [[7, "module-py4ai.data.layer.mongo.repository"]], "py4ai.data.layer.mongo.serializer": [[7, "module-py4ai.data.layer.mongo.serializer"]], "query (py4ai.data.layer.mongo.criteria.mongosearchcriteria property)": [[7, "py4ai.data.layer.mongo.criteria.MongoSearchCriteria.query"]], "retrieve() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.retrieve"]], "retrieve_by_criteria() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.retrieve_by_criteria"]], "save() (py4ai.data.layer.mongo.repository.mongorepository method)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.save"]], "serializer (py4ai.data.layer.mongo.repository.mongorepository property)": [[7, "py4ai.data.layer.mongo.repository.MongoRepository.serializer"]], "csvrepository (class in py4ai.data.layer.pandas.repository)": [[8, "py4ai.data.layer.pandas.repository.CsvRepository"]], "pandasrepository (class in py4ai.data.layer.pandas.repository)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository"]], "pandassearchcriteria (class in py4ai.data.layer.pandas.criteria)": [[8, "py4ai.data.layer.pandas.criteria.PandasSearchCriteria"]], "commit() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.commit"]], "create() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.create"]], "data (py4ai.data.layer.pandas.repository.pandasrepository property)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.data"]], "delete() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.delete"]], "delete_by_criteria() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.delete_by_criteria"]], "empty() (py4ai.data.layer.pandas.criteria.pandassearchcriteria static method)": [[8, "py4ai.data.layer.pandas.criteria.PandasSearchCriteria.empty"]], "list() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.list"]], "py4ai.data.layer.pandas": [[8, "module-py4ai.data.layer.pandas"]], "py4ai.data.layer.pandas.criteria": [[8, "module-py4ai.data.layer.pandas.criteria"]], "py4ai.data.layer.pandas.repository": [[8, "module-py4ai.data.layer.pandas.repository"]], "query (py4ai.data.layer.pandas.criteria.pandassearchcriteria property)": [[8, "py4ai.data.layer.pandas.criteria.PandasSearchCriteria.query"]], "retrieve() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.retrieve"]], "retrieve_by_criteria() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.retrieve_by_criteria"]], "save() (py4ai.data.layer.pandas.repository.pandasrepository method)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.save"]], "serializer (py4ai.data.layer.pandas.repository.pandasrepository property)": [[8, "py4ai.data.layer.pandas.repository.PandasRepository.serializer"]], "sqlalchemyrepository (class in py4ai.data.layer.sqlalchemy.repository)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository"]], "sqlalchemysearchcriteria (class in py4ai.data.layer.sqlalchemy.criteria)": [[9, "py4ai.data.layer.sqlalchemy.criteria.SqlAlchemySearchCriteria"]], "sqlalchemyserializer (class in py4ai.data.layer.sqlalchemy.serializer)": [[9, "py4ai.data.layer.sqlalchemy.serializer.SqlAlchemySerializer"]], "create() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.create"]], "delete() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.delete"]], "delete_by_criteria() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.delete_by_criteria"]], "empty() (py4ai.data.layer.sqlalchemy.criteria.sqlalchemysearchcriteria static method)": [[9, "py4ai.data.layer.sqlalchemy.criteria.SqlAlchemySearchCriteria.empty"]], "list() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.list"]], "py4ai.data.layer.sqlalchemy": [[9, "module-py4ai.data.layer.sqlalchemy"]], "py4ai.data.layer.sqlalchemy.criteria": [[9, "module-py4ai.data.layer.sqlalchemy.criteria"]], "py4ai.data.layer.sqlalchemy.repository": [[9, "module-py4ai.data.layer.sqlalchemy.repository"]], "py4ai.data.layer.sqlalchemy.serializer": [[9, "module-py4ai.data.layer.sqlalchemy.serializer"]], "query (py4ai.data.layer.sqlalchemy.criteria.sqlalchemysearchcriteria property)": [[9, "py4ai.data.layer.sqlalchemy.criteria.SqlAlchemySearchCriteria.query"]], "retrieve() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.retrieve"]], "retrieve_by_criteria() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.retrieve_by_criteria"]], "save() (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository method)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.save"]], "serializer (py4ai.data.layer.sqlalchemy.repository.sqlalchemyrepository property)": [[9, "py4ai.data.layer.sqlalchemy.repository.SqlAlchemyRepository.serializer"]], "baseiterable (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.BaseIterable"]], "baserange (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.BaseRange"]], "cacheddataset (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.CachedDataset"]], "cacheddocuments (class in py4ai.data.model.text)": [[10, "py4ai.data.model.text.CachedDocuments"]], "cachediterable (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.CachedIterable"]], "compositerange (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.CompositeRange"]], "datasetutilsmixin (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin"]], "dillserialization (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.DillSerialization"]], "document (class in py4ai.data.model.text)": [[10, "py4ai.data.model.text.Document"]], "documentsutilsmixin (class in py4ai.data.model.text)": [[10, "py4ai.data.model.text.DocumentsUtilsMixin"]], "itergenerator (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.IterGenerator"]], "iterableutilsmixin (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.IterableUtilsMixin"]], "lazydataset (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.LazyDataset"]], "lazydocuments (class in py4ai.data.model.text)": [[10, "py4ai.data.model.text.LazyDocuments"]], "lazyiterable (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.LazyIterable"]], "multifeaturesample (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.MultiFeatureSample"]], "pandasdataset (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.PandasDataset"]], "pandastimeindexeddataset (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.PandasTimeIndexedDataset"]], "pickleserialization (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.PickleSerialization"]], "range (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.Range"]], "registerlazycachediterables (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.RegisterLazyCachedIterables"]], "sample (class in py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.Sample"]], "serializable (class in py4ai.data.model.core)": [[10, "py4ai.data.model.core.Serializable"]], "addproperty() (py4ai.data.model.text.document method)": [[10, "py4ai.data.model.text.Document.addProperty"]], "aspandasdataset (py4ai.data.model.ml.datasetutilsmixin property)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.asPandasDataset"]], "author (py4ai.data.model.text.document property)": [[10, "py4ai.data.model.text.Document.author"]], "batch() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.batch"]], "business_days (py4ai.data.model.core.baserange property)": [[10, "py4ai.data.model.core.BaseRange.business_days"]], "cached (py4ai.data.model.core.baseiterable property)": [[10, "py4ai.data.model.core.BaseIterable.cached"]], "cached (py4ai.data.model.core.cachediterable property)": [[10, "py4ai.data.model.core.CachedIterable.cached"]], "cached (py4ai.data.model.core.lazyiterable property)": [[10, "py4ai.data.model.core.LazyIterable.cached"]], "cached (py4ai.data.model.ml.pandasdataset property)": [[10, "py4ai.data.model.ml.PandasDataset.cached"]], "cached_type (py4ai.data.model.core.iterableutilsmixin attribute)": [[10, "py4ai.data.model.core.IterableUtilsMixin.cached_type"]], "cached_type (py4ai.data.model.ml.cacheddataset attribute)": [[10, "py4ai.data.model.ml.CachedDataset.cached_type"]], "cached_type (py4ai.data.model.ml.datasetutilsmixin attribute)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.cached_type"]], "cached_type (py4ai.data.model.ml.lazydataset attribute)": [[10, "py4ai.data.model.ml.LazyDataset.cached_type"]], "cached_type (py4ai.data.model.ml.pandasdataset attribute)": [[10, "py4ai.data.model.ml.PandasDataset.cached_type"]], "cached_type (py4ai.data.model.text.cacheddocuments attribute)": [[10, "py4ai.data.model.text.CachedDocuments.cached_type"]], "cached_type (py4ai.data.model.text.documentsutilsmixin attribute)": [[10, "py4ai.data.model.text.DocumentsUtilsMixin.cached_type"]], "cached_type (py4ai.data.model.text.lazydocuments attribute)": [[10, "py4ai.data.model.text.LazyDocuments.cached_type"]], "checknames() (py4ai.data.model.ml.datasetutilsmixin static method)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.checkNames"]], "createobject() (py4ai.data.model.ml.pandasdataset class method)": [[10, "py4ai.data.model.ml.PandasDataset.createObject"]], "days (py4ai.data.model.core.baserange property)": [[10, "py4ai.data.model.core.BaseRange.days"]], "dropna() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.dropna"]], "empty() (py4ai.data.model.core.baseiterable class method)": [[10, "py4ai.data.model.core.BaseIterable.empty"]], "empty() (py4ai.data.model.core.cachediterable class method)": [[10, "py4ai.data.model.core.CachedIterable.empty"]], "empty() (py4ai.data.model.core.lazyiterable class method)": [[10, "py4ai.data.model.core.LazyIterable.empty"]], "empty() (py4ai.data.model.ml.pandasdataset class method)": [[10, "py4ai.data.model.ml.PandasDataset.empty"]], "end (py4ai.data.model.core.baserange property)": [[10, "py4ai.data.model.core.BaseRange.end"]], "end (py4ai.data.model.core.compositerange property)": [[10, "py4ai.data.model.core.CompositeRange.end"]], "end (py4ai.data.model.core.range property)": [[10, "py4ai.data.model.core.Range.end"]], "features (py4ai.data.model.ml.pandasdataset property)": [[10, "py4ai.data.model.ml.PandasDataset.features"]], "features() (py4ai.data.model.ml.lazydataset method)": [[10, "py4ai.data.model.ml.LazyDataset.features"]], "features_and_labels_to_dataset() (in module py4ai.data.model.ml)": [[10, "py4ai.data.model.ml.features_and_labels_to_dataset"]], "filter() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.filter"]], "foreach() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.foreach"]], "from_element() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.from_element"]], "from_iterable() (py4ai.data.model.core.cachediterable class method)": [[10, "py4ai.data.model.core.CachedIterable.from_iterable"]], "from_iterable() (py4ai.data.model.core.lazyiterable class method)": [[10, "py4ai.data.model.core.LazyIterable.from_iterable"]], "from_sequence() (py4ai.data.model.ml.pandasdataset class method)": [[10, "py4ai.data.model.ml.PandasDataset.from_sequence"]], "generate_random_uuid() (in module py4ai.data.model.text)": [[10, "py4ai.data.model.text.generate_random_uuid"]], "getfeaturesas() (py4ai.data.model.ml.datasetutilsmixin method)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.getFeaturesAs"]], "getfeaturesas() (py4ai.data.model.ml.lazydataset method)": [[10, "py4ai.data.model.ml.LazyDataset.getFeaturesAs"]], "getfeaturesas() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.getFeaturesAs"]], "getlabelsas() (py4ai.data.model.ml.datasetutilsmixin method)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.getLabelsAs"]], "getlabelsas() (py4ai.data.model.ml.lazydataset method)": [[10, "py4ai.data.model.ml.LazyDataset.getLabelsAs"]], "getlabelsas() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.getLabelsAs"]], "getorthrow() (py4ai.data.model.text.document method)": [[10, "py4ai.data.model.text.Document.getOrThrow"]], "index (py4ai.data.model.ml.pandasdataset property)": [[10, "py4ai.data.model.ml.PandasDataset.index"]], "intersection() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.intersection"]], "items (py4ai.data.model.core.baseiterable property)": [[10, "py4ai.data.model.core.BaseIterable.items"]], "items (py4ai.data.model.core.cachediterable property)": [[10, "py4ai.data.model.core.CachedIterable.items"]], "items (py4ai.data.model.core.lazyiterable property)": [[10, "py4ai.data.model.core.LazyIterable.items"]], "items (py4ai.data.model.ml.pandasdataset property)": [[10, "py4ai.data.model.ml.PandasDataset.items"]], "items() (py4ai.data.model.text.document method)": [[10, "py4ai.data.model.text.Document.items"]], "iterator (py4ai.data.model.core.itergenerator property)": [[10, "py4ai.data.model.core.IterGenerator.iterator"]], "labels (py4ai.data.model.ml.pandasdataset property)": [[10, "py4ai.data.model.ml.PandasDataset.labels"]], "labels() (py4ai.data.model.ml.lazydataset method)": [[10, "py4ai.data.model.ml.LazyDataset.labels"]], "language (py4ai.data.model.text.document property)": [[10, "py4ai.data.model.text.Document.language"]], "lazy_type (py4ai.data.model.core.iterableutilsmixin attribute)": [[10, "py4ai.data.model.core.IterableUtilsMixin.lazy_type"]], "lazy_type (py4ai.data.model.ml.cacheddataset attribute)": [[10, "py4ai.data.model.ml.CachedDataset.lazy_type"]], "lazy_type (py4ai.data.model.ml.datasetutilsmixin attribute)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.lazy_type"]], "lazy_type (py4ai.data.model.ml.lazydataset attribute)": [[10, "py4ai.data.model.ml.LazyDataset.lazy_type"]], "lazy_type (py4ai.data.model.ml.pandasdataset attribute)": [[10, "py4ai.data.model.ml.PandasDataset.lazy_type"]], "lazy_type (py4ai.data.model.text.cacheddocuments attribute)": [[10, "py4ai.data.model.text.CachedDocuments.lazy_type"]], "lazy_type (py4ai.data.model.text.documentsutilsmixin attribute)": [[10, "py4ai.data.model.text.DocumentsUtilsMixin.lazy_type"]], "lazy_type (py4ai.data.model.text.lazydocuments attribute)": [[10, "py4ai.data.model.text.LazyDocuments.lazy_type"]], "load() (py4ai.data.model.core.dillserialization class method)": [[10, "py4ai.data.model.core.DillSerialization.load"]], "load() (py4ai.data.model.core.pickleserialization class method)": [[10, "py4ai.data.model.core.PickleSerialization.load"]], "load() (py4ai.data.model.core.serializable class method)": [[10, "py4ai.data.model.core.Serializable.load"]], "loc() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.loc"]], "map() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.map"]], "minutes_15 (py4ai.data.model.core.baserange property)": [[10, "py4ai.data.model.core.BaseRange.minutes_15"]], "overlaps() (py4ai.data.model.core.baserange method)": [[10, "py4ai.data.model.core.BaseRange.overlaps"]], "overlaps() (py4ai.data.model.core.compositerange method)": [[10, "py4ai.data.model.core.CompositeRange.overlaps"]], "overlaps() (py4ai.data.model.core.range method)": [[10, "py4ai.data.model.core.Range.overlaps"]], "properties (py4ai.data.model.text.document property)": [[10, "py4ai.data.model.text.Document.properties"]], "py4ai.data.model": [[10, "module-py4ai.data.model"]], "py4ai.data.model.core": [[10, "module-py4ai.data.model.core"]], "py4ai.data.model.ml": [[10, "module-py4ai.data.model.ml"]], "py4ai.data.model.text": [[10, "module-py4ai.data.model.text"]], "range() (py4ai.data.model.core.baserange method)": [[10, "py4ai.data.model.core.BaseRange.range"]], "range() (py4ai.data.model.core.compositerange method)": [[10, "py4ai.data.model.core.CompositeRange.range"]], "range() (py4ai.data.model.core.range method)": [[10, "py4ai.data.model.core.Range.range"]], "register_cached() (py4ai.data.model.core.registerlazycachediterables static method)": [[10, "py4ai.data.model.core.RegisterLazyCachedIterables.register_cached"]], "register_lazy() (py4ai.data.model.core.registerlazycachediterables static method)": [[10, "py4ai.data.model.core.RegisterLazyCachedIterables.register_lazy"]], "removeproperty() (py4ai.data.model.text.document method)": [[10, "py4ai.data.model.text.Document.removeProperty"]], "setrandomuuid() (py4ai.data.model.text.document method)": [[10, "py4ai.data.model.text.Document.setRandomUUID"]], "simplify() (py4ai.data.model.core.compositerange method)": [[10, "py4ai.data.model.core.CompositeRange.simplify"]], "start (py4ai.data.model.core.baserange property)": [[10, "py4ai.data.model.core.BaseRange.start"]], "start (py4ai.data.model.core.compositerange property)": [[10, "py4ai.data.model.core.CompositeRange.start"]], "start (py4ai.data.model.core.range property)": [[10, "py4ai.data.model.core.Range.start"]], "take() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.take"]], "takeaspandas() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.takeAsPandas"]], "text (py4ai.data.model.text.document property)": [[10, "py4ai.data.model.text.Document.text"]], "to_cached() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.to_cached"]], "to_df() (py4ai.data.model.ml.cacheddataset method)": [[10, "py4ai.data.model.ml.CachedDataset.to_df"]], "to_df() (py4ai.data.model.text.cacheddocuments method)": [[10, "py4ai.data.model.text.CachedDocuments.to_df"]], "to_lazy() (py4ai.data.model.core.iterableutilsmixin method)": [[10, "py4ai.data.model.core.IterableUtilsMixin.to_lazy"]], "type (py4ai.data.model.core.baseiterable property)": [[10, "py4ai.data.model.core.BaseIterable.type"]], "type (py4ai.data.model.text.documentsutilsmixin property)": [[10, "py4ai.data.model.text.DocumentsUtilsMixin.type"]], "type() (py4ai.data.model.ml.datasetutilsmixin method)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.type"]], "union() (py4ai.data.model.ml.cacheddataset method)": [[10, "py4ai.data.model.ml.CachedDataset.union"]], "union() (py4ai.data.model.ml.datasetutilsmixin method)": [[10, "py4ai.data.model.ml.DatasetUtilsMixin.union"]], "union() (py4ai.data.model.ml.lazydataset method)": [[10, "py4ai.data.model.ml.LazyDataset.union"]], "union() (py4ai.data.model.ml.pandasdataset method)": [[10, "py4ai.data.model.ml.PandasDataset.union"]], "withlookback() (py4ai.data.model.ml.lazydataset method)": [[10, "py4ai.data.model.ml.LazyDataset.withLookback"]], "write() (py4ai.data.model.core.dillserialization method)": [[10, "py4ai.data.model.core.DillSerialization.write"]], "write() (py4ai.data.model.core.pickleserialization method)": [[10, "py4ai.data.model.core.PickleSerialization.write"]], "write() (py4ai.data.model.core.serializable method)": [[10, "py4ai.data.model.core.Serializable.write"]]}})